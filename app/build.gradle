plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id "kotlin-kapt"

//    kotlin "kapt"
    // id "dagger.hilt.android.plugin"
}

android {

    signingConfigs {
        debug {
            storeFile file('C:\\Users\\jeanl\\OneDrive\\Documents\\Dev\\Android\\keystore.jks')
            keyAlias 'key0'
            storePassword 'C2MMy4hJrywjGe'
            keyPassword 'C2MMy4hJrywjGe'
        }
        release {
            storePassword 'C2MMy4hJrywjGe'
            keyAlias 'key0'
            storeFile file('C:\\Users\\jeanl\\OneDrive\\Documents\\Dev\\Android\\keystore.jks')
            keyPassword 'C2MMy4hJrywjGe'
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.tezcatli.vaxwidget"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled = true
        // Sets Java compatibility to Java 8
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.release
            //     signingConfig debug.signingConfig
        }
    }
}


dependencies {

    def work_version = "2.5.0"

    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")
    // (Java only)
    implementation("androidx.work:work-runtime:$work_version")
    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:$work_version")
    // optional - RxJava2 support
    implementation("androidx.work:work-rxjava2:$work_version")
    // optional - GCMNetworkManager support
    implementation("androidx.work:work-gcm:$work_version")
    // optional - Test helpers
    androidTestImplementation("androidx.work:work-testing:$work_version")
    // optional - Multiprocess support
    implementation "androidx.work:work-multiprocess:$work_version"

    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")


    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.opencsv:opencsv:4.6'
    implementation 'com.beust:klaxon:5.5'
    // testImplementation 'junit:junit:5.4'
    implementation "androidx.core:core-ktx:1.5.0"
   // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // implementation "com.google.dagger:hilt-android:$hilt_version"
    // kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // implementation 'androidx.hilt:hilt-work:1.0.0'
    // When using Kotlin.
    // kapt 'androidx.hilt:hilt-compiler:1.0.0'
    // When using Java.
    // annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0'



}

configurations {
    all {
        exclude module: 'httpclient'
        exclude module: 'commons-logging'
    }
}

repositories {
    mavenCentral()
}
